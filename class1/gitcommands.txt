                         GIT COMMANDS
Tell git who you are
	git config  --global user.name "your name"
  	git config  --global user.email "your email"

initilize a new local repositiory
	git init

Status
	git status
	(show the status of files and changes)
	
	git log
	(show all the commits and previous changes)
	
	git show HEAD
	(show current position of head)

Add files
	git add <files_name seperated by commas>
	(Add one or more files to staging area by their name)

	git add .
	(add all files at ones in working directory)

Commit 
	git commit -m "commit message"  
	(Commit changes to head (but not yet to the remote repository))

Push
	git push origin master

Connect to a remote repository
	git remote add origin <server>
	git remote -v  (list all currently configured remote repository)

Undo local changes
	git checkout -- <gitcommands>
	git fetch origin
	git reset  --hard origin/master  
	(Instead, to drop all your local changes and commits, fetch the latest history from the server and point your local master branch at it, do this:)

Branches
	git checkout -b <branchname>  
	(Create a new branch and switch to it:)
	
	git checkout <branchname>  
	(Switch from one branch to another:)
	
	git branch 
	(List all the branches in your repo, and also tell you what branch you're currently in:)
	
	git branch -d <branchname> 
	(Delete the feature branch:)
	
	git push origin <branchname> 
	(Push the branch to your remote repository, so others can use it:)
	
	git push --all origin  
	(Push all branches to your remote repository:)
	
	git push origin :<branchname>
	(Delete a branch on your remote repository:)

Updates from the remote repository
	git pull  
	(Fetch and merge changes on the remote server to your working directory:)
	
	git merge <branchname>  
	(To merge a different branch into your active branch:)
	
	git diff  
	(View all the merge conflicts:)
	
	diff -- base <filename> 
	(View the conflicts against the base file:)
	
	git add <filename>  
	(After you have manually resolved any conflicts, you mark the changed file:)

rollback
	git checkout HEAD <filename>
	(clear working area)
	
	git reset head<filename>
	(clear staging area)
	
	git reset SHA_number
	(reset to a particular commit) #Good job

	
